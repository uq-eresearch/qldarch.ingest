@prefix map: <http://qldarch.net/ns/d2rq/omeka-mapping#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix qldarch: <http://qldarch.net/ns/rdf/2012-06/terms#> .
@prefix qaat: <http://qldarch.net/ns/omeka/2012-11/auxterms#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix qape: <http://qldarch.net/ns/omeka/2012-11/pseudoentity#> .
@prefix qaomeka: <http://qldarch.net/omeka/items/show/> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "com.mysql.jdbc.Driver";
	d2rq:jdbcDSN "jdbc:mysql://localhost/omeka";
	d2rq:username "omeka";
	jdbc:autoReconnect "true";
	jdbc:zeroDateTimeBehavior "convertToNull";
	.

# Digital Items
map:digitalObjects a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:DigitalObject;
    d2rq:containsDuplicates "true";
    .
map:spreadsheets a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Spreadsheet;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Spreadsheet'"
    .
map:movingImages a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:MovingImage;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Moving Image'"
    .
map:interviews a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Interview;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Interview'"
    .
map:transcripts a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Transcript;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Transcript'"
    .
map:sounds a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Sound;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Sound'"
    .
map:photographs a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Photograph;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Photograph'"
    .
map:portraits a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Portrait;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Portrait'"
    .
map:articles a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
    d2rq:class qldarch:Article;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Article'"
    .
map:lineDrawings a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:LineDrawing;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Line Drawing'"
    .
map:files a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/files/show/@@o_files.id@@";
	d2rq:class qldarch:DigitalFile;
    d2rq:containsDuplicates "true"
    .

# Controlled Vocabulary Instances
map:pseudoEntities a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:PseudoEntity;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
# Special property qaat:label used to capture the string used within Omeka to describe the pseudoentity.
map:pseudoEntityLabels a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:pseudoEntities;
    d2rq:property qaat:label;
    d2rq:column "o_element_texts.text";
    d2rq:datatype xsd:string;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.id = o_simple_vocab_terms.element_id"
    .
map:pseudoEntityTypes a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:pseudoEntities;
    d2rq:property qaat:pseudoEntityType;
    d2rq:column "o_elements.name";
    d2rq:datatype xsd:string;
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .

# Individual classes of pseudoentity; one per controlled vocabularly
map:people a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Person'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:creators a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Creator'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:interviewers a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Interviewer'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:interviewees a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Interviewee'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:transcribers a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Transcriber'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:subjects a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:Subject;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Subject'";
    d2rq:condition "o_simple_vocab_terms.terms != ''";
    .
map:drawingTypes a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:DrawingType;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Drawing Type'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:projectNames a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:ProjectName;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Project Name'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:contemporaryFirms a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:Firm;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Contemporary Firm'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:buildingTypologies a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:BuildingTypology;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Building Typology'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:subjectTypes a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:SubjectType;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Subject Type'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .

# Item meta-metadata
map:dateSubmitted a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:dateSubmitted;
    d2rq:datatype xsd:date;
    d2rq:column "o_items.modified"
    .

# File metadata
map:hasFile a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:hasFile;
    d2rq:refersToClassMap map:files;
    d2rq:join "o_items.id <= o_files.item_id"
    .
map:sourceFilename a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:files;
    d2rq:property qldarch:sourceFilename;
    d2rq:column "o_files.original_filename";
    .
map:systemLocation a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:files;
    d2rq:property qldarch:systemLocation;
    d2rq:datatype xsd:string;
    d2rq:column "o_files.archive_filename";
    .
map:mimeType a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:files;
    d2rq:property qldarch:hasMimeType;
    d2rq:datatype xsd:string;
    d2rq:column "o_files.mime_os";
    .
map:basicMimeType a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:files;
    d2rq:property qldarch:basicMimeType;
    d2rq:datatype xsd:string;
    d2rq:column "o_files.mime_browser";
    .
map:hasFileSize a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:files;
    d2rq:property qldarch:hasFileSize;
    d2rq:datatype xsd:integer;
    d2rq:column "o_files.size";
    .
map:depictedIn a d2rq:PropertyBridge;
    d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:people;
    d2rq:property qaat:depictedIn;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:condition "o_elements.name='Person'"
    .
# Dublin Core Metadata
map:title a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:title;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Title'"
    .
map:description a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:description;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Description'"
    .
map:creator a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:creators;
    d2rq:property qaat:created;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Creator'"
    .
map:email a d2rq:PropertyBridge;
    d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:creators;
    d2rq:property qaat:email;
    d2rq:datatype xsd:string;
    d2rq:column "o_entities.email";
    d2rq:condition "o_element_texts.text = CONCAT(o_entities.first_name, ' ', o_entities.last_name)";
    .
map:dateCreated a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:created;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Date Created'"
    .
map:rights a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:rights;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Rights'"
    .
map:externalIdentifier a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:identifier;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='External Identifier'"
    .

# Direct relationships
map:transcriptItem a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:interviews;
    d2rq:property qaat:transcriptItem;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Transcript Item'"
    .

map:transcribedItem a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:transcripts;
    d2rq:property qaat:transcribedItem;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Transcribed Resource'"
    .

# Controlled Vocabs Metadata
map:interviewerIn a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:interviewers;
    d2rq:property qaat:interviewerIn;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Interviewer'"
    .
map:intervieweeIn a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:interviewees;
    d2rq:property qaat:intervieweeIn;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Interviewee'"
    .
map:transcriberOf a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:transcribers;
    d2rq:property qaat:transcriberOf;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Transcriber'"
    .
map:subjectOf a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:subjects;
    d2rq:property qaat:subjectOf;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Subject'"
    .
map:contemporaryTo a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:contemporaryFirms;
    d2rq:property qaat:contemporaryTo;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Contemporary Firm'"
    .
map:typedDrawing a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:drawingTypes;
    d2rq:property qaat:typedDrawing;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Drawing Type'"
    .
map:buildingTypologyOf a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:buildingTypologies;
    d2rq:property qaat:buildingTypologyOf;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Building Typology'"
    .
map:projectNameOf a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:projectNames;
    d2rq:property qaat:projectNameOf;
    d2rq:refersToClassMap map:digitalObjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Project Name'"
    .
map:subjectType a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:subjectTypes;
    d2rq:property qaat:subjectType;
    d2rq:refersToClassMap map:portraits;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Subject Type'"
    .

# Item Metadata Types
map:photographer a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:photographer;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Photographer'"
    .
map:externalLocation a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:externalLocation;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='External Location'"
    .
map:transcriptLocation a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:interviews;
    d2rq:property qldarch:transcriptLocation;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Transcript Location'"
    .
map:location a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:location;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Location'"
    .
map:datePhotographed a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:photographs;
    d2rq:property qldarch:dateOriginalCreation;
    d2rq:datatype xsd:date;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Photograph Date'"
    .
map:projectNumber a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:projectNumber;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Project number'"
    .
map:originalCreationDate a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:dateOriginalCreation;
    d2rq:datatype xsd:date;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Original Creation Date'"
    .
map:preferredImage a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:preferredImage;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Preferred Image'"
    .
map:format a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:format;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'" ;
    d2rq:condition "o_elements.name='Format'"
    .

#
# Article metadata - untested.
#

map:authors a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:authors;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Author(s)'"
    .
map:periodicals a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:periodicalTitle;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Title of the periodical'"
    .
map:volume a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:volume;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Volume'"
    .
map:issue a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:issue;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Issue'"
    .
map:datePublished a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:datePublished;
    d2rq:datatype xsd:date;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Publication Date'"
    .
map:pageNumbers a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:pages;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Pages'"
    .

#
# Geographic metadata
#

map:latitude a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:latitude;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Latitude'"
    .
map:longitude a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:longitude;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Longitude'"
    .
